name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Ubuntu (Rust公式コンテナ)
          - os: ubuntu-latest
            container: rust:latest
            protoc_install: apt-get update && apt-get install -y protobuf-compiler
            bubblewrap_install: apt-get install -y bubblewrap libseccomp-dev
          # Fedora
          - os: ubuntu-latest
            container: fedora:latest
            protoc_install: dnf install -y protobuf-compiler rust cargo
            bubblewrap_install: dnf install -y bubblewrap libseccomp-devel
          # Alpine
          - os: ubuntu-latest
            container: alpine:latest
            protoc_install: apk add protobuf protobuf-dev rust cargo
            bubblewrap_install: apk add bubblewrap libseccomp-dev
          # Ubuntu (ネイティブ)
          - os: ubuntu-latest
            container: ""
            protoc_install: sudo apt-get update && sudo apt-get install -y protobuf-compiler
            bubblewrap_install: sudo apt-get install -y bubblewrap libseccomp-dev
            use_rust_toolchain: true

    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        ${{ matrix.protoc_install }}
        ${{ matrix.bubblewrap_install }}
    
    - name: Install Rust
      if: ${{ matrix.use_rust_toolchain }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build
      run: cargo build --verbose
    
    - name: Run tests
      run: cargo test --verbose
    
    - name: Clippy
      run: cargo clippy -- -D warnings
    
    - name: Check formatting
      run: cargo fmt -- --check 